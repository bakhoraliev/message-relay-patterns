version: "3.9"

services:
  postgres:
    # Uses Debezium's Postgres image with logical decoding plugins pre-installed
    image: debezium/postgres:14-alpine
    container_name: message-relay-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data

      # Migrations run automatically on first database initialization
      - ./db/migrations:/docker-entrypoint-initdb.d

      # Seeds are run manually via `make seed.*` commands
      - ./db/seeds:/seeds
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 60s
      retries: 5

  kafka:
    # Single-node Kafka with KRaft mode (no ZooKeeper needed)
    image: bitnami/kafka:3.7
    container_name: message-relay-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    healthcheck:
      test: ["CMD-SHELL","/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 60s
      retries: 5

  polling-publisher-relay:
    build:
      context: ./polling_publisher
      dockerfile: ../Dockerfile
    container_name: polling-publisher-relay
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      DATABASE_DSN: "postgres://postgres:password@postgres:5432"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"

  transaction-log-tailing-relay:
    build:
      context: ./transaction_log_tailing
      dockerfile: ../Dockerfile
    container_name: transaction-log-tailing-relay
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      DATABASE_DSN: "postgres://postgres:password@postgres:5432"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      REPLICATION_SLOT_NAME: "outbox"

volumes:
  pgdata:
    driver: local
